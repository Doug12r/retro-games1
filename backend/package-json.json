{
  "name": "retro-game-backend",
  "version": "1.0.0",
  "description": "Enterprise-grade backend API for retro game ROM management with chunked uploads, metadata scraping, and comprehensive file processing",
  "main": "dist/server.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/server.js",
    "dev": "tsx watch src/server.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:reset": "prisma migrate reset",
    "db:seed": "tsx src/scripts/seed.ts",
    "db:deploy": "prisma migrate deploy",
    "docker:build": "docker build -t retro-game-backend .",
    "docker:run": "docker run -p 3001:3001 retro-game-backend",
    "docker:compose": "docker-compose up -d",
    "clean": "rimraf dist",
    "postinstall": "prisma generate"
  },
  "keywords": [
    "retro-gaming",
    "rom-management",
    "file-upload",
    "fastify",
    "typescript",
    "prisma",
    "postgresql",
    "redis",
    "websocket",
    "metadata-scraping"
  ],
  "author": "RetroGame Team",
  "license": "MIT",
  "dependencies": {
    "@fastify/cors": "^8.4.2",
    "@fastify/helmet": "^11.1.1",
    "@fastify/multipart": "^8.0.0",
    "@fastify/rate-limit": "^9.1.0",
    "@fastify/redis": "^6.1.1",
    "@fastify/static": "^6.12.0",
    "@fastify/type-provider-typebox": "^3.5.0",
    "@fastify/websocket": "^8.3.1",
    "@prisma/client": "^5.7.1",
    "@sinclair/typebox": "^0.31.28",
    "axios": "^1.6.2",
    "fastify": "^4.24.3",
    "node-cron": "^3.0.3",
    "pino": "^8.17.2",
    "pino-pretty": "^10.3.1",
    "ws": "^8.14.2",
    "yauzl": "^3.0.0",
    "unzipper": "^0.10.14",
    "node-7z": "^3.0.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "@types/node": "^20.10.4",
    "@types/node-cron": "^3.0.11",
    "@types/ws": "^8.5.10",
    "@types/yauzl": "^2.10.3",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "prettier": "^3.1.0",
    "prisma": "^5.7.1",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "tsx": "^4.6.2",
    "typescript": "^5.3.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "prisma": {
    "schema": "src/prisma/schema.prisma"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src", "<rootDir>/tests"],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/prisma/**",
      "!src/scripts/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.ts"],
    "testTimeout": 30000
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint",
      "prettier"
    ],
    "rules": {
      "prettier/prettier": "error",
      "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-explicit-any": "warn",
      "no-console": "warn"
    },
    "env": {
      "node": true,
      "es2022": true,
      "jest": true
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false,
    "arrowParens": "avoid",
    "endOfLine": "lf"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/retro-game-backend.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/retro-game-backend/issues"
  },
  "homepage": "https://github.com/your-org/retro-game-backend#readme"
}