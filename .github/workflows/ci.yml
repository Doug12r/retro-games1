name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  DOCKER_BUILDKIT: 1

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: retrogames_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Run TypeScript compilation
        working-directory: backend
        run: npm run build

      - name: Run ESLint
        working-directory: backend
        run: npm run lint

      - name: Setup test database
        working-directory: backend
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/retrogames_test
          REDIS_URL: redis://localhost:6379
        run: |
          npm run db:generate
          npm run db:push

      - name: Run unit tests
        working-directory: backend
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/retrogames_test
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test
        run: npm run test:coverage

      - name: Upload backend coverage
        uses: codecov/codecov-action@v3
        with:
          files: backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run TypeScript compilation
        working-directory: frontend
        run: npm run build

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint

      - name: Run unit tests
        working-directory: frontend
        run: npm run test:coverage

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: doug12r/retro-games1-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: doug12r/retro-games1-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build emulator image
        uses: docker/build-push-action@v5
        with:
          context: ./emulator
          push: false
          tags: doug12r/retro-games1-emulator:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
