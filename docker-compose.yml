version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: retro-games1-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-retrogames}
      POSTGRES_USER: ${POSTGRES_USER:-retrogames}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - retrogames-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: retro-games1-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - retrogames-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: doug12r/retro-games1-backend:latest
    container_name: retro-games1-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - rom_storage:/opt/retrogames/roms
      - upload_storage:/opt/retrogames/uploads
    networks:
      - retrogames-network
    depends_on:
      - postgres
      - redis

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: doug12r/retro-games1-frontend:latest
    container_name: retro-games1-frontend
    restart: unless-stopped
    networks:
      - retrogames-network
    depends_on:
      - backend

  # Reverse Proxy
  caddy:
    image: caddy:2-alpine
    container_name: retro-games1-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - retrogames-network
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  redis_data:
  rom_storage:
  upload_storage:
  caddy_data:
  caddy_config:

networks:
  retrogames-network:
    driver: bridge
